(()=>{"use strict";const t=function(){return{doesUsernameExist:async function(t){try{return 500!==(await fetch(`https://631dbfab789612cd07afa22a.mockapi.io/todos/${t}`)).status}catch(t){return void console.log(t)}}}};(function(){const e=t(),n=document.querySelector(".theme-mode-switch-btn"),o=document.querySelector(":root"),s=document.querySelector(".login-btn"),c=document.querySelector(".logout-btn"),i=document.querySelector(".overlay"),r=document.querySelector(".form-login-btn"),a=document.querySelector(".username-input"),d=document.querySelector(".username-error"),u=document.querySelector(".form-close-btn");function l(){m()?a.setCustomValidity(""):(a.setCustomValidity("Username must be at least 6 characters"),a.reportValidity())}function m(){return!a.validity.tooShort&&""!==a.value}function h(){i.classList.add("hidden")}document.querySelector(".login-form"),n.addEventListener("click",(function(){o.classList.toggle("dark-theme");const t=this.querySelector("img");this.classList.contains("dark-theme")?(t.src="icons/lightTheme.svg",this.classList.remove("dark-theme")):(t.src="icons/darkTheme.svg",this.classList.add("dark-theme"))})),s.addEventListener("click",(function(){i.classList.remove("hidden"),a.value="",d.classList.add("hidden")})),c.addEventListener("click",(function(){const t=document.querySelector(".account-btn");t.classList.remove("account-btn"),t.classList.add("login-btn"),t.textContent="Login"})),r.addEventListener("click",(async function(t){if(!m())return l(),void t.preventDefault();const n=a.value;await e.doesUsernameExist(n)?(h(),s.textContent=n,s.classList.remove("login-btn"),s.classList.add("account-btn")):d.classList.remove("hidden")})),a.addEventListener("input",l),u.addEventListener("click",h)})(),t()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,